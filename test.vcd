$date
	Tue Mar 26 19:26:55 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 1 # xs $end
$scope module uut $end
$var wire 1 $ R $end
$var wire 1 % Ra $end
$var wire 1 & Rac $end
$var wire 1 ' Rb $end
$var wire 1 ( Rc $end
$var wire 1 ) S $end
$var wire 1 * Wa $end
$var wire 1 + Wac $end
$var wire 1 , Wb $end
$var wire 1 - Wc $end
$var wire 1 . Wt $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # xs $end
$scope module unidadControl $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # xs $end
$var reg 1 / R $end
$var reg 1 0 Ra $end
$var reg 1 1 Rac $end
$var reg 1 2 Rb $end
$var reg 1 3 Rc $end
$var reg 1 4 S $end
$var reg 1 5 Wa $end
$var reg 1 6 Wac $end
$var reg 1 7 Wb $end
$var reg 1 8 Wc $end
$var reg 1 9 Wt $end
$var reg 3 : current_state [2:0] $end
$var reg 1 ; fin $end
$var reg 3 < next_state [2:0] $end
$upscope $end
$scope module unidadDatos $end
$var wire 1 $ R $end
$var wire 1 % Ra $end
$var wire 1 & Rac $end
$var wire 1 ' Rb $end
$var wire 1 ( Rc $end
$var wire 1 ) S $end
$var wire 1 * Wa $end
$var wire 1 + Wac $end
$var wire 1 , Wb $end
$var wire 1 - Wc $end
$var wire 1 . Wt $end
$var wire 8 = bus1 [7:0] $end
$var wire 8 > bus3 [7:0] $end
$var wire 1 ! clk $end
$var wire 8 ? bus2 [7:0] $end
$scope module A $end
$var wire 1 % R $end
$var wire 1 * W $end
$var wire 8 @ bus [7:0] $end
$var wire 1 ! clk $end
$var reg 8 A q [7:0] $end
$upscope $end
$scope module AC $end
$var wire 1 & R $end
$var wire 1 + W $end
$var wire 8 B busin [7:0] $end
$var wire 8 C busout [7:0] $end
$var wire 1 ! clk $end
$var reg 8 D q [7:0] $end
$upscope $end
$scope module B $end
$var wire 1 ' R $end
$var wire 1 , W $end
$var wire 8 E bus [7:0] $end
$var wire 1 ! clk $end
$var reg 8 F q [7:0] $end
$upscope $end
$scope module C $end
$var wire 1 ( R $end
$var wire 1 - W $end
$var wire 8 G bus [7:0] $end
$var wire 1 ! clk $end
$var reg 8 H q [7:0] $end
$upscope $end
$scope module T $end
$var wire 1 + W $end
$var wire 8 I busin [7:0] $end
$var wire 8 J busout [7:0] $end
$var wire 1 ! clk $end
$var reg 8 K q [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 K
b1010 J
bx I
b1010 H
bx G
b1010 F
bx E
b1010 D
bx C
bz B
b1010 A
bx @
b1010 ?
bz >
bx =
bx <
0;
bx :
09
08
07
06
05
04
03
02
01
00
0/
z.
z-
z,
z+
z*
z)
z(
z'
z&
z%
z$
0#
0"
0!
$end
#5000
b0 <
b0 :
1"
#10000
b1 <
1#
0"
#50000
19
b1 :
b10 <
0#
1!
#100000
0!
#150000
b11 <
16
09
b10 :
1!
